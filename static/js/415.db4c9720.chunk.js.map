{"version":3,"file":"static/js/415.db4c9720.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx","services/movieApiService.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieListStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 8px;\n`;\n\nexport const MovieListLink = styled(Link)`\n  color: #111;\n  &:hover {\n    color: #bd3e53;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { MovieListLink, MovieListStyled } from './MovieList.styled';\n\nexport default function MovieList({ movies }) {\n  const location = useLocation();\n  return (\n    <>\n      <MovieListStyled>\n        {movies.map(({ id, title }) => (\n          <li key={id}>\n            <MovieListLink to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </MovieListLink>\n          </li>\n        ))}\n      </MovieListStyled>\n    </>\n  );\n}\n","import Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { fetchDayTrends } from 'services/movieApiService';\n\nexport default function Home() {\n  const [dayTrends, setDayTrends] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    const getDayTrends = async () => {\n      setStatus('pending');\n      try {\n        const { results } = await fetchDayTrends();\n        if (results.length === 0) {\n          setStatus('notFound');\n          return;\n        }\n        setDayTrends(results);\n        setStatus('resolved');\n      } catch (error) {\n        console.error(error.message);\n        setStatus('rejected');\n      }\n    };\n\n    getDayTrends();\n  }, []);\n\n  return (\n    <>\n      {status === 'pending' && <Loader />}\n      {status === 'resolved' && (\n        <>\n          <h1>Trending today</h1>\n          <MovieList movies={dayTrends} />\n        </>\n      )}\n      {status === 'notFound' && <div>We don't have any today trends.</div>}\n      {status === 'rejected' && <div>Ooops...... Something went wrong!</div>}\n    </>\n  );\n}\n","import axios from 'axios';\n\n// const TOKEN =\n//   'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NTc5NmYxNzM4NzI3OTg1NWM3MjBiMjdmNDljMjVmMSIsInN1YiI6IjY0N2Y3MDYzNzFmZmRmMDEwYzg3YWIzOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.9AzF80qawQzmYwfptJjDK5gSiKy9M6ZEOpq2I4PFWtg';\nconst API_KEY = '55796f17387279855c720b27f49c25f1';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.headers.common['Authorization'] = API_KEY;\n\nconst TRENDING_DAY_ENDPOINT = '/trending/movie/day';\nconst TRENDING_WEEK_ENDPOINT = '/trending/movie/week';\nconst UPCOMING_ENDPOINT = '/movie/upcoming';\nconst BY_ID_ENDPOINT = '/movie';\nconst SEARCH_QUERY_ENDPOINT = '/search/movie';\nconst GENRE_ENDPOINT = '/genre/movie/list';\n\nconst LANGUAGE = 'en-US';\nconst ADULT = 'false';\n\n/**\n * Отримує трендові фільми дня\n * @param {String || Number} page\n * @returns {Promise} response data\n */\nasync function fetchDayTrends(page = 1) {\n  const response = await axios.get(\n    `${BASE_URL}${TRENDING_DAY_ENDPOINT}?api_key=${API_KEY}&page=${page}&language=${LANGUAGE}`\n  );\n  return response.data;\n}\n\n/**\n * Отримує трендові фільми тижня\n * @param {String || Number} page\n * @returns {Promise} response data\n */\nasync function fetchWeekTrends(page = 1) {\n  const response = await axios.get(\n    `${BASE_URL}${TRENDING_WEEK_ENDPOINT}?api_key=${API_KEY}&page=${page}&language=${LANGUAGE}`\n  );\n  return response.data;\n}\n\n/**\n * Отримує нові фільми\n * @param {String || Number} page\n * @returns {Promise} response data\n */\nasync function fetchUpcomingThisMonth(page = 1) {\n  const response = await axios.get(\n    `${BASE_URL}${UPCOMING_ENDPOINT}?api_key=${API_KEY}&page=${page}&language=${LANGUAGE}`\n  );\n  return response.data;\n}\n\n/**\n * Отримує фільм за ID\n * @param {String} id\n * @returns {Promise} response data\n */\nasync function fetchMovieById(id) {\n  const response = await axios.get(\n    `${BASE_URL}${BY_ID_ENDPOINT}/${id}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  return response.data;\n}\n\n/**\n * Отримує акторів до фільму за ID\n * @param {String} id\n * @returns {Promise} response data\n */\nasync function fetchMovieCastById(id) {\n  const response = await axios.get(\n    `${BASE_URL}${BY_ID_ENDPOINT}/${id}/credits?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  return response.data;\n}\n/**\n * Отримує обзори до фільму за ID\n * @param {String} id\n * @returns {Promise} response data\n */\nasync function fetchMovieReviewsById(id) {\n  const response = await axios.get(\n    `${BASE_URL}${BY_ID_ENDPOINT}/${id}/reviews?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  return response.data;\n}\n\n/**\n * Отримує фільми за пошуковим запитом\n * @param {String} searchQuery\n * @param {String || Number} page\n * @returns {Promise} response data\n */\nasync function fetchMovieBySearchQuery(searchQuery, page = 1) {\n  const response = await axios.get(\n    `${BASE_URL}${SEARCH_QUERY_ENDPOINT}?query=${searchQuery}&api_key=${API_KEY}&page=${page}&include_adult=${ADULT}&language=${LANGUAGE}`\n  );\n  return response.data;\n}\n\n/**\n * Отримує фільм за пошуковим запитом та роком\n * @param {String} searchQuery\n * @param {String || Number} year\n * @param {String || Number} page\n * @returns {Promise} response data\n */\nasync function fetchMovieBySearchQueryAndYear(searchQuery, year, page = 1) {\n  const response = await axios.get(\n    `${BASE_URL}${SEARCH_QUERY_ENDPOINT}?query=${searchQuery}&primary_release_year=${year}&page=${page}&api_key=${API_KEY}&include_adult=${ADULT}&language=${LANGUAGE}`\n  );\n  return response.data;\n}\n\n/**\n * Отримує відео до фільму за ID\n * @param {String} id\n * @returns {Promise} response data\n */\nasync function fetchMovieVideosById(id) {\n  const response = await axios.get(\n    `${BASE_URL}${BY_ID_ENDPOINT}/${id}/videos?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  return response.data;\n}\n\n/**\n * Отримує перелік жанрів\n * @returns {Promise} response data\n\n */\nasync function fetchGenresList() {\n  const response = await axios.get(\n    `${BASE_URL}${GENRE_ENDPOINT}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  return response.data;\n}\n\nexport {\n  fetchDayTrends,\n  fetchWeekTrends,\n  fetchUpcomingThisMonth,\n  fetchMovieById,\n  fetchMovieBySearchQuery,\n  fetchMovieBySearchQueryAndYear,\n  fetchMovieVideosById,\n  fetchGenresList,\n  fetchMovieCastById,\n  fetchMovieReviewsById,\n};\n"],"names":["MovieListStyled","styled","MovieListLink","Link","MovieList","movies","location","useLocation","map","id","title","to","state","from","Home","useState","dayTrends","setDayTrends","status","setStatus","useEffect","getDayTrends","fetchDayTrends","results","length","console","error","message","API_KEY","BASE_URL","axios","TRENDING_DAY_ENDPOINT","BY_ID_ENDPOINT","SEARCH_QUERY_ENDPOINT","LANGUAGE","ADULT","page","response","data","fetchMovieById","fetchMovieCastById","fetchMovieReviewsById","fetchMovieBySearchQuery","searchQuery"],"sourceRoot":""}