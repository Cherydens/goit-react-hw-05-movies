{"version":3,"file":"static/js/387.b52af827.chunk.js","mappings":"sRAEaA,EAAmBC,EAAAA,EAAAA,GAAH,qGAOhBC,EAAeD,EAAAA,EAAAA,GAAH,+CAGZE,EAAqBF,EAAAA,EAAAA,IAAH,0C,mBCFhB,SAASG,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WACR,GAAKP,EAAL,CAEA,IAAMQ,EAAY,mCAAG,WAAMC,GAAN,gFACnBH,EAAU,WADS,mBAGSI,EAAAA,EAAAA,IAAsBD,GAH/B,mBAIM,KADfE,EAHS,EAGTA,SACIC,OAJK,uBAKfN,EAAU,YALK,0BAQjBF,EAAWO,GACXL,EAAU,YATO,kDAWjBO,QAAQC,MAAM,KAAMC,SACpBT,EAAU,YAZO,0DAAH,sDAgBlBE,EAAaR,EAlBO,CAmBrB,GAAE,CAACA,KAGF,gCACc,YAAXK,IAAwB,SAACW,EAAA,EAAD,IACb,aAAXX,IACC,SAACV,EAAD,UACGQ,EAAQc,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,UAACtB,EAAD,WAAc,WAASqB,MACvB,uBAAIC,MAFGV,EADE,MAQL,aAAXJ,IACC,SAACP,EAAD,UAAoB,8CAIV,aAAXO,IAAyB,yBAAK,wCAGpC,C,mMCjDKe,EAAwB,sBAGxBC,EAAiB,SACjBC,EAAwB,gBAIxBC,EAAQ,QAWP,SAAeC,IAAtB,+BAcG,SAAH,IAdO,OAcP,oBAdO,2GAA8BC,EAA9B,+BAAqC,EAArC,UACkBC,EAAAA,EAAAA,GAAM,CAC3BC,IAAKP,EACLQ,OAAQ,CACNH,KAAAA,KAJC,uBACGI,EADH,EACGA,KADH,kBAOEA,GAPF,mEA6CA,SAAeC,EAAtB,kCAWG,SAAH,IAXO,OAWP,oBAXO,WAA8BrB,GAA9B,0FACkBiB,EAAAA,EAAAA,GAAM,CAC3BC,IAAI,GAAD,OAAKN,EAAL,YAAuBZ,KAFvB,uBACGoB,EADH,EACGA,KADH,kBAIEA,GAJF,kEAYA,SAAeE,EAAtB,kCAWG,SAAH,IAXO,OAWP,oBAXO,WAAkCtB,GAAlC,0FACkBiB,EAAAA,EAAAA,GAAM,CAC3BC,IAAI,GAAD,OAAKN,EAAL,YAAuBZ,EAAvB,cAFA,uBACGoB,EADH,EACGA,KADH,kBAIEA,GAJF,kEAYA,SAAenB,EAAtB,kCAYG,SAAH,IAZO,OAYP,oBAZO,WAAqCD,GAArC,0FACkBiB,EAAAA,EAAAA,GAAM,CAC3BC,IAAI,GAAD,OAAKN,EAAL,YAAuBZ,EAAvB,cAFA,uBACGoB,EADH,EACGA,KADH,kBAIEA,GAJF,kEAaA,SAAeG,EAAtB,kCAcG,SAAH,IAdO,OAcP,oBAdO,WAAuCC,GAAvC,8FAA8CR,EAA9C,+BAAqD,EAArD,UACkBC,EAAAA,EAAAA,GAAM,CAC3BC,IAAKL,EACLM,OAAQ,CAAEK,MAAAA,EAAOR,KAAAA,EAAMS,cAAeX,KAHnC,uBACGM,EADH,EACGA,KADH,kBAKEA,GALF,mEA3FPH,EAAAA,EAAAA,SAAAA,QAZiB,+BAajBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAfE,6NAgBFA,EAAAA,EAAAA,SAAAA,OAAwB,CAAES,SALT,Q","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/movieApiService.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  padding: 24px;\n`;\n\nexport const ReviewsTitle = styled.h4`\n  margin-bottom: 8px;\n`;\nexport const NoReviewsContainer = styled.div`\n  padding: 24px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviewsById } from 'services/movieApiService';\nimport {\n  NoReviewsContainer,\n  ReviewsContainer,\n  ReviewsTitle,\n} from './Reviews.styled';\nimport Loader from 'components/Loader/Loader';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const getMovieById = async id => {\n      setStatus('pending');\n      try {\n        const { results } = await fetchMovieReviewsById(id);\n        if (results.length === 0) {\n          setStatus('notFound');\n          return;\n        }\n        setReviews(results);\n        setStatus('resolved');\n      } catch (error) {\n        console.error(error.message);\n        setStatus('rejected');\n      }\n    };\n\n    getMovieById(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {status === 'pending' && <Loader />}\n      {status === 'resolved' && (\n        <ReviewsContainer>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <ReviewsTitle>Author: {author}</ReviewsTitle>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ReviewsContainer>\n      )}\n      {status === 'notFound' && (\n        <NoReviewsContainer>\n          We don't have any reviews for this movie.\n        </NoReviewsContainer>\n      )}\n      {status === 'rejected' && <div>Ooops...... Something went wrong!</div>}\n    </>\n  );\n}\n","import axios from 'axios';\n\n// const API_KEY = '55796f17387279855c720b27f49c25f1';\n\nconst AUTH_TOKEN =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NTc5NmYxNzM4NzI3OTg1NWM3MjBiMjdmNDljMjVmMSIsInN1YiI6IjY0N2Y3MDYzNzFmZmRmMDEwYzg3YWIzOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.9AzF80qawQzmYwfptJjDK5gSiKy9M6ZEOpq2I4PFWtg';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst TRENDING_DAY_ENDPOINT = '/trending/movie/day';\nconst TRENDING_WEEK_ENDPOINT = '/trending/movie/week';\nconst UPCOMING_ENDPOINT = '/movie/upcoming';\nconst BY_ID_ENDPOINT = '/movie';\nconst SEARCH_QUERY_ENDPOINT = '/search/movie';\nconst GENRE_ENDPOINT = '/genre/movie/list';\n\nconst LANGUAGE = 'en-US';\nconst ADULT = 'false';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\naxios.defaults.params = { language: LANGUAGE };\n\n/**\n * Отримує трендові фільми дня\n * @param {String || Number} page\n * @returns {Promise} response data\n */\nexport async function fetchDayTrends(page = 1) {\n  const { data } = await axios({\n    url: TRENDING_DAY_ENDPOINT,\n    params: {\n      page,\n    },\n  });\n  return data;\n}\n\n/**\n * Отримує трендові фільми тижня\n * @param {String || Number} page\n * @returns {Promise} response data\n */\nexport async function fetchWeekTrends(page = 1) {\n  const { data } = await axios({\n    url: TRENDING_WEEK_ENDPOINT,\n    params: {\n      page,\n    },\n  });\n  return data;\n}\n\n/**\n * Отримує нові фільми\n * @param {String || Number} page\n * @returns {Promise} response data\n */\nexport async function fetchUpcomingThisMonth(page = 1) {\n  const { data } = await axios({\n    url: UPCOMING_ENDPOINT,\n    params: {\n      page,\n    },\n  });\n  return data;\n}\n\n/**\n * Отримує фільм за ID\n * @param {String} id\n * @returns {Promise} response data\n */\nexport async function fetchMovieById(id) {\n  const { data } = await axios({\n    url: `${BY_ID_ENDPOINT}/${id}`,\n  });\n  return data;\n}\n\n/**\n * Отримує акторів до фільму за ID\n * @param {String} id\n * @returns {Promise} response data\n */\nexport async function fetchMovieCastById(id) {\n  const { data } = await axios({\n    url: `${BY_ID_ENDPOINT}/${id}/credits`,\n  });\n  return data;\n}\n\n/**\n * Отримує обзори до фільму за ID\n * @param {String} id\n * @returns {Promise} response data\n */\nexport async function fetchMovieReviewsById(id) {\n  const { data } = await axios({\n    url: `${BY_ID_ENDPOINT}/${id}/reviews`,\n  });\n  return data;\n}\n\n/**\n * Отримує фільми за пошуковим запитом\n * @param {String} query\n * @param {String || Number} page\n * @returns {Promise} response data\n */\nexport async function fetchMovieBySearchQuery(query, page = 1) {\n  const { data } = await axios({\n    url: SEARCH_QUERY_ENDPOINT,\n    params: { query, page, include_adult: ADULT },\n  });\n  return data;\n}\n\n/**\n * Отримує фільм за пошуковим запитом та роком\n * @param {String} query\n * @param {String || Number} primary_release_year\n * @param {String || Number} page\n * @returns {Promise} response data\n */\nexport async function fetchMovieBySearchQueryAndYear(\n  query,\n  primary_release_year,\n  page = 1\n) {\n  const { data } = await axios({\n    url: SEARCH_QUERY_ENDPOINT,\n    params: {\n      query,\n      page,\n      include_adult: ADULT,\n      primary_release_year,\n    },\n  });\n  return data;\n}\n\n/**\n * Отримує відео до фільму за ID\n * @param {String} id\n * @returns {Promise} response data\n */\nexport async function fetchMovieVideosById(id) {\n  const { data } = await axios({\n    url: `${BY_ID_ENDPOINT}/${id}/videos`,\n  });\n  return data;\n}\n\n/**\n * Отримує перелік жанрів\n * @returns {Promise} response data\n */\nexport async function fetchGenresList() {\n  const { data } = await axios({\n    url: GENRE_ENDPOINT,\n  });\n  return data;\n}\n"],"names":["ReviewsContainer","styled","ReviewsTitle","NoReviewsContainer","Reviews","movieId","useParams","useState","reviews","setReviews","status","setStatus","useEffect","getMovieById","id","fetchMovieReviewsById","results","length","console","error","message","Loader","map","author","content","TRENDING_DAY_ENDPOINT","BY_ID_ENDPOINT","SEARCH_QUERY_ENDPOINT","ADULT","fetchDayTrends","page","axios","url","params","data","fetchMovieById","fetchMovieCastById","fetchMovieBySearchQuery","query","include_adult","language"],"sourceRoot":""}