{"version":3,"file":"static/js/415.4ae47222.chunk.js","mappings":"sNAGaA,EAAkBC,EAAAA,EAAAA,GAAH,kKAWfC,GAAgBD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,+E,SCTX,SAASG,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAC5BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,SAACP,EAAD,UACGK,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAACR,EAAD,CAAeS,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAAnD,SACGI,KAFID,EADC,OAUnB,C,gKCfc,SAASK,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,6FACnBF,EAAU,WADS,mBAGSG,EAAAA,EAAAA,MAHT,mBAIM,KADfC,EAHS,EAGTA,SACIC,OAJK,uBAKfL,EAAU,YALK,0BAQjBF,EAAaM,GACbJ,EAAU,YATO,kDAWjBM,QAAQC,MAAM,KAAMC,SACpBR,EAAU,YAZO,0DAAH,qDAgBlBE,GACD,GAAE,KAGD,gCACc,YAAXH,IAAwB,SAAC,IAAD,IACb,aAAXA,IACC,iCACE,wBAAI,oBACJ,SAAC,IAAD,CAAWb,OAAQW,OAGX,aAAXE,IAAyB,yBAAK,oCACnB,aAAXA,IAAyB,yBAAK,wCAGpC,C,mMCjCKU,EAAwB,sBAGxBC,EAAiB,SACjBC,EAAwB,gBAIxBC,EAAQ,QAWP,SAAeT,IAAtB,+BAcG,SAAH,IAdO,OAcP,oBAdO,2GAA8BU,EAA9B,+BAAqC,EAArC,UACkBC,EAAAA,EAAAA,GAAM,CAC3BC,IAAKN,EACLO,OAAQ,CACNH,KAAAA,KAJC,uBACGI,EADH,EACGA,KADH,kBAOEA,GAPF,mEA6CA,SAAeC,EAAtB,kCAWG,SAAH,IAXO,OAWP,oBAXO,WAA8B5B,GAA9B,0FACkBwB,EAAAA,EAAAA,GAAM,CAC3BC,IAAI,GAAD,OAAKL,EAAL,YAAuBpB,KAFvB,uBACG2B,EADH,EACGA,KADH,kBAIEA,GAJF,kEAYA,SAAeE,EAAtB,kCAWG,SAAH,IAXO,OAWP,oBAXO,WAAkC7B,GAAlC,0FACkBwB,EAAAA,EAAAA,GAAM,CAC3BC,IAAI,GAAD,OAAKL,EAAL,YAAuBpB,EAAvB,cAFA,uBACG2B,EADH,EACGA,KADH,kBAIEA,GAJF,kEAYA,SAAeG,EAAtB,kCAYG,SAAH,IAZO,OAYP,oBAZO,WAAqC9B,GAArC,0FACkBwB,EAAAA,EAAAA,GAAM,CAC3BC,IAAI,GAAD,OAAKL,EAAL,YAAuBpB,EAAvB,cAFA,uBACG2B,EADH,EACGA,KADH,kBAIEA,GAJF,kEAaA,SAAeI,EAAtB,kCAcG,SAAH,IAdO,OAcP,oBAdO,WAAuCC,GAAvC,8FAA8CT,EAA9C,+BAAqD,EAArD,UACkBC,EAAAA,EAAAA,GAAM,CAC3BC,IAAKJ,EACLK,OAAQ,CAAEM,MAAAA,EAAOT,KAAAA,EAAMU,cAAeX,KAHnC,uBACGK,EADH,EACGA,KADH,kBAKEA,GALF,mEA3FPH,EAAAA,EAAAA,SAAAA,QAZiB,+BAajBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAfE,6NAgBFA,EAAAA,EAAAA,SAAAA,OAAwB,CAAEU,SALT,Q","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx","services/movieApiService.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieListStyled = styled.ul`\n  display: flex;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n\n  flex-direction: column;\n  gap: 8px;\n  padding: 8px;\n`;\n\nexport const MovieListLink = styled(Link)`\n  color: #111;\n  &:hover {\n    color: #bd3e53;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { MovieListLink, MovieListStyled } from './MovieList.styled';\n\nexport default function MovieList({ movies }) {\n  const location = useLocation();\n  return (\n    <>\n      <MovieListStyled>\n        {movies.map(({ id, title }) => (\n          <li key={id}>\n            <MovieListLink to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </MovieListLink>\n          </li>\n        ))}\n      </MovieListStyled>\n    </>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { fetchDayTrends } from 'services/movieApiService';\n\nexport default function Home() {\n  const [dayTrends, setDayTrends] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    const getDayTrends = async () => {\n      setStatus('pending');\n      try {\n        const { results } = await fetchDayTrends();\n        if (results.length === 0) {\n          setStatus('notFound');\n          return;\n        }\n        setDayTrends(results);\n        setStatus('resolved');\n      } catch (error) {\n        console.error(error.message);\n        setStatus('rejected');\n      }\n    };\n\n    getDayTrends();\n  }, []);\n\n  return (\n    <>\n      {status === 'pending' && <Loader />}\n      {status === 'resolved' && (\n        <>\n          <h1>Trending today</h1>\n          <MovieList movies={dayTrends} />\n        </>\n      )}\n      {status === 'notFound' && <div>We don't have any today trends.</div>}\n      {status === 'rejected' && <div>Ooops...... Something went wrong!</div>}\n    </>\n  );\n}\n","import axios from 'axios';\n\n// const API_KEY = '55796f17387279855c720b27f49c25f1';\n\nconst AUTH_TOKEN =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NTc5NmYxNzM4NzI3OTg1NWM3MjBiMjdmNDljMjVmMSIsInN1YiI6IjY0N2Y3MDYzNzFmZmRmMDEwYzg3YWIzOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.9AzF80qawQzmYwfptJjDK5gSiKy9M6ZEOpq2I4PFWtg';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst TRENDING_DAY_ENDPOINT = '/trending/movie/day';\nconst TRENDING_WEEK_ENDPOINT = '/trending/movie/week';\nconst UPCOMING_ENDPOINT = '/movie/upcoming';\nconst BY_ID_ENDPOINT = '/movie';\nconst SEARCH_QUERY_ENDPOINT = '/search/movie';\nconst GENRE_ENDPOINT = '/genre/movie/list';\n\nconst LANGUAGE = 'en-US';\nconst ADULT = 'false';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\naxios.defaults.params = { language: LANGUAGE };\n\n/**\n * Отримує трендові фільми дня\n * @param {String || Number} page\n * @returns {Promise} response data\n */\nexport async function fetchDayTrends(page = 1) {\n  const { data } = await axios({\n    url: TRENDING_DAY_ENDPOINT,\n    params: {\n      page,\n    },\n  });\n  return data;\n}\n\n/**\n * Отримує трендові фільми тижня\n * @param {String || Number} page\n * @returns {Promise} response data\n */\nexport async function fetchWeekTrends(page = 1) {\n  const { data } = await axios({\n    url: TRENDING_WEEK_ENDPOINT,\n    params: {\n      page,\n    },\n  });\n  return data;\n}\n\n/**\n * Отримує нові фільми\n * @param {String || Number} page\n * @returns {Promise} response data\n */\nexport async function fetchUpcomingThisMonth(page = 1) {\n  const { data } = await axios({\n    url: UPCOMING_ENDPOINT,\n    params: {\n      page,\n    },\n  });\n  return data;\n}\n\n/**\n * Отримує фільм за ID\n * @param {String} id\n * @returns {Promise} response data\n */\nexport async function fetchMovieById(id) {\n  const { data } = await axios({\n    url: `${BY_ID_ENDPOINT}/${id}`,\n  });\n  return data;\n}\n\n/**\n * Отримує акторів до фільму за ID\n * @param {String} id\n * @returns {Promise} response data\n */\nexport async function fetchMovieCastById(id) {\n  const { data } = await axios({\n    url: `${BY_ID_ENDPOINT}/${id}/credits`,\n  });\n  return data;\n}\n\n/**\n * Отримує обзори до фільму за ID\n * @param {String} id\n * @returns {Promise} response data\n */\nexport async function fetchMovieReviewsById(id) {\n  const { data } = await axios({\n    url: `${BY_ID_ENDPOINT}/${id}/reviews`,\n  });\n  return data;\n}\n\n/**\n * Отримує фільми за пошуковим запитом\n * @param {String} query\n * @param {String || Number} page\n * @returns {Promise} response data\n */\nexport async function fetchMovieBySearchQuery(query, page = 1) {\n  const { data } = await axios({\n    url: SEARCH_QUERY_ENDPOINT,\n    params: { query, page, include_adult: ADULT },\n  });\n  return data;\n}\n\n/**\n * Отримує фільм за пошуковим запитом та роком\n * @param {String} query\n * @param {String || Number} primary_release_year\n * @param {String || Number} page\n * @returns {Promise} response data\n */\nexport async function fetchMovieBySearchQueryAndYear(\n  query,\n  primary_release_year,\n  page = 1\n) {\n  const { data } = await axios({\n    url: SEARCH_QUERY_ENDPOINT,\n    params: {\n      query,\n      page,\n      include_adult: ADULT,\n      primary_release_year,\n    },\n  });\n  return data;\n}\n\n/**\n * Отримує відео до фільму за ID\n * @param {String} id\n * @returns {Promise} response data\n */\nexport async function fetchMovieVideosById(id) {\n  const { data } = await axios({\n    url: `${BY_ID_ENDPOINT}/${id}/videos`,\n  });\n  return data;\n}\n\n/**\n * Отримує перелік жанрів\n * @returns {Promise} response data\n */\nexport async function fetchGenresList() {\n  const { data } = await axios({\n    url: GENRE_ENDPOINT,\n  });\n  return data;\n}\n"],"names":["MovieListStyled","styled","MovieListLink","Link","MovieList","movies","location","useLocation","map","id","title","to","state","from","Home","useState","dayTrends","setDayTrends","status","setStatus","useEffect","getDayTrends","fetchDayTrends","results","length","console","error","message","TRENDING_DAY_ENDPOINT","BY_ID_ENDPOINT","SEARCH_QUERY_ENDPOINT","ADULT","page","axios","url","params","data","fetchMovieById","fetchMovieCastById","fetchMovieReviewsById","fetchMovieBySearchQuery","query","include_adult","language"],"sourceRoot":""}